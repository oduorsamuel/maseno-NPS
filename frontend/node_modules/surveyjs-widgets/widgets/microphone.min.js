/*!
 * surveyjs-widgets - Widgets for the SurveyJS library v1.0.32
 * Copyright (c) 2015-2017 Devsoft Baltic OÜ  - http://surveyjs.io/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("widgets/microphone",[],t):"object"==typeof exports?exports["widgets/microphone"]=t():e["widgets/microphone"]=t()}(this,function(){return function(e){function t(i){if(o[i])return o[i].exports;var r=o[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var o={};return t.m=e,t.c=o,t.d=function(e,o,i){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=18)}({18:function(e,t,o){"use strict";function i(e){var t={name:"microphone",title:"Microphone",iconName:"icon-microphone",widgetIsLoaded:function(){return void 0!==n.a},isFit:function(e){return"microphone"===e.getType()},htmlTemplate:"<div><button type='button'  title='Record'><i class='fa fa-microphone' aria-hidden='true'></i></button>&nbsp;<button type='button' title='Save'><i class='fa fa-cloud' aria-hidden='true'></i></button>&nbsp;<audio style='position:relative; top:16px; left:10px; height:35px;-moz-box-shadow: 2px 2px 4px 0px #006773;-webkit-box-shadow:  2px 2px 4px 0px #006773;box-shadow: 2px 2px 4px 0px #006773;' controls='true' ></audio></div>",activatedByChanged:function(t){e.JsonObject.metaData.addClass("microphone",[],null,"empty")},afterRender:function(e,t){var o=t.getElementsByTagName("button")[0],i=t.getElementsByTagName("button")[1],r=t.getElementsByTagName("audio")[0],a=function(t){var o={type:"audio",mimeType:"audio/webm",audioBitsPerSecond:44100,sampleRate:44100,bufferSize:16384,numberOfAudioChannels:1};console.log("successCallback"),e.survey.mystream=t,e.survey.recordRTC=n()(e.survey.mystream,o),void 0!==e.survey.recordRTC&&(console.log("startRecording"),e.survey.recordRTC.startRecording())},d=function(){alert("No microphone"),e.survey.recordRTC=void 0,e.survey.mystream=void 0},s=function(t){console.log("processAudio");var o=e.survey.recordRTC.getBlob(),i=new FileReader;i.onload=function(t){var o=t.target.result;console.log("dataUri: "+o),e.value=o,r.src=o,console.log("cleaning"),e.survey.recordRTC=void 0,e.survey.mystream=void 0},i.readAsDataURL(o)},c=function(){e.value=void 0,void 0!==e.survey.recordRTC&&(e.survey.recordRTC.stopRecording(l),void 0!==e.survey.mystream&&e.survey.mystream.getAudioTracks().forEach(function(e){e.stop()}));var t={video:!1,audio:!0};navigator.mediaDevices.getUserMedia(t).then(a.bind(this),d.bind(this))},u=function(){console.log("stopRecording"),void 0!==e.survey.recordRTC&&(e.survey.recordRTC.stopRecording(s.bind(this)),void 0!==e.survey.mystream&&e.survey.mystream.getAudioTracks().forEach(function(e){e.stop()}))};e.isReadOnly?o.parentNode.removeChild(o):o.onclick=c,e.isReadOnly?i.parentNode.removeChild(i):i.onclick=u,r.src=e.value;var f=function(){},l=function(){};e.valueChangedCallback=f},willUnmount:function(e,t){console.log("unmount microphone no record "),void 0!==e.survey.recordRTC&&(e.survey.recordRTC.stopRecording(doNothingHandler),void 0!==e.survey.mystream&&e.survey.mystream.getAudioTracks().forEach(function(e){e.stop()}),e.value=void 0,e.survey.recordRTC=void 0,e.survey.mystream=void 0)}};e.CustomWidgetCollection.Instance.addCustomWidget(t,"customtype")}Object.defineProperty(t,"__esModule",{value:!0});var r=o(19),n=o.n(r);"undefined"!=typeof Survey&&i(Survey),t.default=i},19:function(e,t,o){"use strict";(function(o,i){/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or gif or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */
function r(e,t){function o(o){return o&&(t=new n(e,o)),t.disableLogs||console.log("started recording "+t.type+" stream."),v?(v.clearRecordedData(),v.record(),m("recording"),b.recordingDuration&&g(),b):(i(function(){b.recordingDuration&&g()}),b)}function i(o){o&&(t.initCallback=function(){o(),o=t.initCallback=null});var i=new a(e,t);v=new i(e,t),v.record(),m("recording"),t.disableLogs||console.log("Initialized recorderType:",v.constructor.name,"for output-type:",t.type)}function d(e){function o(o){if(!v)return void("function"==typeof e.call?e.call(b,""):e(""));Object.keys(v).forEach(function(e){"function"!=typeof v[e]&&(b[e]=v[e])});var i=v.blob;if(!i){if(!o)throw"Recording failed.";v.blob=i=o}if(i&&!t.disableLogs&&console.log(i.type,"->",s(i.size)),e){var r=A.createObjectURL(i);"function"==typeof e.call?e.call(b,r):e(r)}t.autoWriteToDisk&&h(function(e){var o={};o[t.type+"Blob"]=e,I.Store(o)})}return e=e||function(){},v?"paused"===b.state?(b.resumeRecording(),void setTimeout(function(){d(e)},1)):("recording"===b.state||t.disableLogs||console.warn('Recording state should be: "recording", however current state is: ',b.state),t.disableLogs||console.log("Stopped recording "+t.type+" stream."),"gif"!==t.type?v.stop(o):(v.stop(),o()),void m("stopped")):void p()}function u(){return v?"recording"!==b.state?void(t.disableLogs||console.warn("Unable to pause the recording. Recording state: ",b.state)):(m("paused"),v.pause(),void(t.disableLogs||console.log("Paused recording."))):void p()}function f(){return v?"paused"!==b.state?void(t.disableLogs||console.warn("Unable to resume the recording. Recording state: ",b.state)):(m("recording"),v.resume(),void(t.disableLogs||console.log("Resumed recording."))):void p()}function l(e){postMessage((new FileReaderSync).readAsDataURL(e))}function h(e,o){if(!e)throw"Pass a callback function over getDataURL.";var i=o?o.blob:(v||{}).blob;if(!i)return t.disableLogs||console.warn("Blob encoder did not finish its job yet."),void setTimeout(function(){h(e,o)},1e3);if("undefined"==typeof Worker||navigator.mozGetUserMedia){var r=new FileReader;r.readAsDataURL(i),r.onload=function(t){e(t.target.result)}}else{var n=function(e){var t=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),o=new Worker(t);return A.revokeObjectURL(t),o}(l);n.onmessage=function(t){e(t.data)},n.postMessage(i)}}function g(e){if(e=e||0,"paused"===b.state)return void setTimeout(function(){g(e)},1e3);if("stopped"!==b.state){if(e>=b.recordingDuration)return void d(b.onRecordingStopped);e+=1e3,setTimeout(function(){g(e)},1e3)}}function m(e){b&&(b.state=e,"function"==typeof b.onStateChanged.call?b.onStateChanged.call(b,e):b.onStateChanged(e))}function p(){!0!==t.disableLogs&&console.warn(w)}if(!e)throw"First parameter is required.";t=t||{type:"video"},t=new n(e,t);var v,b=this,w='It seems that recorder is destroyed or "startRecording" is not invoked for '+t.type+" recorder.",y={startRecording:o,stopRecording:d,pauseRecording:u,resumeRecording:f,initRecorder:i,setRecordingDuration:function(e,t){if(void 0===e)throw"recordingDuration is required.";if("number"!=typeof e)throw"recordingDuration must be a number.";return b.recordingDuration=e,b.onRecordingStopped=t||function(){},{onRecordingStopped:function(e){b.onRecordingStopped=e}}},clearRecordedData:function(){if(!v)return void p();v.clearRecordedData(),t.disableLogs||console.log("Cleared old recorded data.")},getBlob:function(){return v?v.blob:void p()},getDataURL:h,toURL:function(){return v?A.createObjectURL(v.blob):void p()},getInternalRecorder:function(){return v},save:function(e){if(!v)return void p();c(v.blob,e)},getFromDisk:function(e){if(!v)return void p();r.getFromDisk(t.type,e)},setAdvertisementArray:function(e){t.advertisement=[];for(var o=e.length,i=0;i<o;i++)t.advertisement.push({duration:i,image:e[i]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){v&&"function"==typeof v.clearRecordedData&&v.clearRecordedData(),v=null,m("inactive"),b.blob=null},onStateChanged:function(e){t.disableLogs||console.log("Recorder state changed:",e)},state:"inactive",getState:function(){return b.state},destroy:function(){var e=t.disableLogs;t.disableLogs=!0,b.reset(),t={},m("destroyed"),y=b=null,O.AudioContextConstructor&&(O.AudioContextConstructor.close(),O.AudioContextConstructor=null),e||console.warn("RecordRTC is destroyed.")},version:"5.4.6"};if(!this)return b=y,y;for(var R in y)this[R]=y[R];return b=this,y}/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */
function n(e,t){return t.recorderType||t.type||(t.audio&&t.video?t.type="video":t.audio&&!t.video&&(t.type="audio")),t.recorderType&&!t.type&&(t.recorderType===p||t.recorderType===m?t.type="video":t.recorderType===v?t.type="gif":t.recorderType===g?t.type="audio":t.recorderType===h&&(e.getAudioTracks().length&&e.getVideoTracks().length?t.type="video":e.getAudioTracks().length&&!e.getVideoTracks().length?t.type="audio":!e.getAudioTracks().length&&e.getVideoTracks().length&&(t.type="audio"))),void 0!==h&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(t.mimeType||(t.mimeType="video/webm"),t.type||(t.type=t.mimeType.split("/")[0]),t.bitsPerSecond),t.type||(t.mimeType&&(t.type=t.mimeType.split("/")[0]),t.type||(t.type="audio")),t}/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */
function a(e,t){var o;return(D||M||x)&&(o=g),"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&!D&&(o=h),"video"===t.type&&(D||x)&&(o=p),"gif"===t.type&&(o=v),"canvas"===t.type&&(o=m),l()&&o!==m&&o!==v&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(e.getVideoTracks&&e.getVideoTracks().length||e.getAudioTracks&&e.getAudioTracks().length)&&("audio"===t.type?"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("audio/webm")&&(o=h):"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("video/webm")&&(o=h)),t.recorderType&&(o=t.recorderType),e instanceof Array&&e.length&&(o=w),!t.disableLogs&&o&&o.name&&console.log("Using recorderType:",o.name||o.constructor.name),o}/**
 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
 * @summary MRecordRTC stands for "Multiple-RecordRTC".
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef MRecordRTC
 * @class
 * @example
 * var recorder = new MRecordRTC();
 * recorder.addStream(MediaStream);
 * recorder.mediaType = {
 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
 *     video: true, // or WhammyRecorder or MediaStreamRecorder
 *     gif: true    // or GifRecorder
 * };
 * // mimeType is optional and should be set only in advance cases.
 * recorder.mimeType = {
 *     audio: 'audio/wav',
 *     video: 'video/webm',
 *     gif:   'image/gif'
 * };
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @requires {@link RecordRTC}
 */
function d(e){this.addStream=function(t){t&&(e=t)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var t,o=this.mediaType,i=this.mimeType||{audio:null,video:null,gif:null};if("function"!=typeof o.audio&&l()&&e.getAudioTracks&&!e.getAudioTracks().length&&(o.audio=!1),"function"!=typeof o.video&&l()&&e.getVideoTracks&&!e.getVideoTracks().length&&(o.video=!1),"function"!=typeof o.gif&&l()&&e.getVideoTracks&&!e.getVideoTracks().length&&(o.gif=!1),!o.audio&&!o.video&&!o.gif)throw"MediaStream must have either audio or video tracks.";if(o.audio&&(t=null,"function"==typeof o.audio&&(t=o.audio),this.audioRecorder=new r(e,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:i.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),o.video||this.audioRecorder.startRecording()),o.video){t=null,"function"==typeof o.video&&(t=o.video);var n=e;if(l()&&o.audio&&"function"==typeof o.audio){var a=e.getVideoTracks()[0];navigator.mozGetUserMedia?(n=new B,n.addTrack(a),t&&t===p&&(t=h)):n=new B([a])}this.videoRecorder=new r(n,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:i.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),o.audio||this.videoRecorder.startRecording()}if(o.audio&&o.video){var d=this;l()?(d.audioRecorder=null,d.videoRecorder.startRecording()):d.videoRecorder.initRecorder(function(){d.audioRecorder.initRecorder(function(){d.videoRecorder.startRecording(),d.audioRecorder.startRecording()})})}o.gif&&(t=null,"function"==typeof o.gif&&(t=o.gif),this.gifRecorder=new r(e,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:i.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.destroy=function(){this.audioRecorder&&(this.audioRecorder.destroy(),this.audioRecorder=null),this.videoRecorder&&(this.videoRecorder.destroy(),this.videoRecorder=null),this.gifRecorder&&(this.gifRecorder.destroy(),this.gifRecorder=null)},this.getDataURL=function(e){function t(e,t){if("undefined"!=typeof Worker){var i=o(function(e){postMessage((new FileReaderSync).readAsDataURL(e))});i.onmessage=function(e){t(e.data)},i.postMessage(e)}else{var r=new FileReader;r.readAsDataURL(e),r.onload=function(e){t(e.target.result)}}}function o(e){var t,o=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),i=new Worker(o);if(void 0!==A)t=A;else{if("undefined"==typeof webkitURL)throw"Neither URL nor webkitURL detected.";t=webkitURL}return t.revokeObjectURL(o),i}this.getBlob(function(o){o.audio&&o.video?t(o.audio,function(i){t(o.video,function(t){e({audio:i,video:t})})}):o.audio?t(o.audio,function(t){e({audio:t})}):o.video&&t(o.video,function(t){e({video:t})})})},this.writeToDisk=function(){r.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){e=e||{audio:!0,video:!0,gif:!0},e.audio&&this.audioRecorder&&this.audioRecorder.save("string"==typeof e.audio?e.audio:""),e.video&&this.videoRecorder&&this.videoRecorder.save("string"==typeof e.video?e.video:""),e.gif&&this.gifRecorder&&this.gifRecorder.save("string"==typeof e.gif?e.gif:"")}}function s(e){var t=["Bytes","KB","MB","GB","TB"];if(0===e)return"0 Bytes";var o=parseInt(Math.floor(Math.log(e)/Math.log(1e3)),10);return(e/Math.pow(1e3,o)).toPrecision(3)+" "+t[o]}function c(e,t){if(!e)throw"Blob object is required.";if(!e.type)try{e.type="video/webm"}catch(e){}var o=(e.type||"video/webm").split("/")[1];if(t&&-1!==t.indexOf(".")){var i=t.split(".");t=i[0],o=i[1]}var r=(t||Math.round(9999999999*Math.random())+888888888)+"."+o;if(void 0!==navigator.msSaveOrOpenBlob)return navigator.msSaveOrOpenBlob(e,r);if(void 0!==navigator.msSaveBlob)return navigator.msSaveBlob(e,r);var n=document.createElement("a");n.href=A.createObjectURL(e),n.download=r,n.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(n),"function"==typeof n.click?n.click():(n.target="_blank",n.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),A.revokeObjectURL(n.href)}function u(){return"undefined"!=typeof window&&"object"==typeof window.process&&"renderer"===window.process.type||(!(void 0===i||"object"!=typeof i.versions||!i.versions.electron)||"object"==typeof navigator&&"string"==typeof navigator.userAgent&&navigator.userAgent.indexOf("Electron")>=0)}function f(e,t,o){if("createObjectURL"in A&&!o)try{t.src=A.createObjectURL(e)}catch(o){return void f(e,t,!0)}else"srcObject"in t?t.srcObject=e:"mozSrcObject"in t?t.mozSrcObject=e:alert("createObjectURL/srcObject both are not supported.")}function l(){var e=!!window.opera||navigator.userAgent.indexOf(" OPR/")>=0,t=!!window.chrome&&!e||u();if(void 0!==window.InstallTrigger)return!0;var o,i,r=(navigator.appVersion,navigator.userAgent),n=""+parseFloat(navigator.appVersion),a=parseInt(navigator.appVersion,10);return(t||e)&&(o=r.indexOf("Chrome"),n=r.substring(o+7)),-1!==(i=n.indexOf(";"))&&(n=n.substring(0,i)),-1!==(i=n.indexOf(" "))&&(n=n.substring(0,i)),a=parseInt(""+n,10),isNaN(a)&&(n=""+parseFloat(navigator.appVersion),a=parseInt(navigator.appVersion,10)),a>=49}/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {}, // get intervals based blobs
 *     ignoreMutedMedia: true
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */
function h(e,t){function o(){a.timestamps.push((new Date).getTime()),"function"==typeof t.onTimeStamp&&t.onTimeStamp(a.timestamps[a.timestamps.length-1],a.timestamps)}function i(e){return u&&u.mimeType?u.mimeType:e.mimeType||"video/webm"}function r(){c=[],u=null,a.timestamps=[]}function n(){if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}var a=this;if(void 0===e)throw'First argument "MediaStream" is required.';if("undefined"==typeof MediaRecorder)throw"Your browser does not supports Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if(t=t||{mimeType:"video/webm"},"audio"===t.type){if(e.getVideoTracks().length&&e.getAudioTracks().length){var d;navigator.mozGetUserMedia?(d=new B,d.addTrack(e.getAudioTracks()[0])):d=new B(e.getAudioTracks()),e=d}t.mimeType&&-1!==t.mimeType.toString().toLowerCase().indexOf("audio")||(t.mimeType=D?"audio/webm":"audio/ogg"),t.mimeType&&"audio/ogg"!==t.mimeType.toString().toLowerCase()&&navigator.mozGetUserMedia&&(t.mimeType="audio/ogg")}var c=[];this.getArrayOfBlobs=function(){return c},this.record=function(){a.blob=null,a.clearRecordedData(),a.timestamps=[],f=[],c=[];var r=t;t.disableLogs||console.log("Passing following config over MediaRecorder API.",r),u&&(u=null),D&&!l()&&(r="video/vp8"),"function"==typeof MediaRecorder.isTypeSupported&&r.mimeType&&(MediaRecorder.isTypeSupported(r.mimeType)||(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",r.mimeType),r.mimeType="audio"===t.type?"audio/webm":"video/webm"));try{u=new MediaRecorder(e,r),t.mimeType=r.mimeType}catch(t){u=new MediaRecorder(e)}r.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in u&&!1===u.canRecordMimeType(r.mimeType)&&(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",r.mimeType)),u.ignoreMutedMedia=!0===t.ignoreMutedMedia,u.ondataavailable=function(e){if(e.data&&f.push("ondataavailable: "+s(e.data.size)),"number"!=typeof t.timeSlice){if(!e.data||!e.data.size||e.data.size<100||a.blob)return void(a.recordingCallback&&(a.recordingCallback(new Blob([],{type:i(r)})),a.recordingCallback=null));a.blob=t.getNativeBlob?e.data:new Blob([e.data],{type:i(r)}),a.recordingCallback&&(a.recordingCallback(a.blob),a.recordingCallback=null)}else if(e.data&&e.data.size&&e.data.size>100&&(c.push(e.data),o(),"function"==typeof t.ondataavailable)){var n=t.getNativeBlob?e.data:new Blob([e.data],{type:i(r)});t.ondataavailable(n)}},u.onstart=function(){f.push("started")},u.onpause=function(){f.push("paused")},u.onresume=function(){f.push("resumed")},u.onstop=function(){f.push("stopped")},u.onerror=function(e){f.push("error: "+e),t.disableLogs||(-1!==e.name.toString().toLowerCase().indexOf("invalidstate")?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",e):-1!==e.name.toString().toLowerCase().indexOf("notsupported")?console.error("MIME type (",r.mimeType,") is not supported.",e):-1!==e.name.toString().toLowerCase().indexOf("security")?console.error("MediaRecorder security error",e):"OutOfMemory"===e.name?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"IllegalStreamModification"===e.name?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"OtherRecordingError"===e.name?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"GenericError"===e.name?console.error("The UA cannot provide the codec or recording option that has been requested.",e):console.error("MediaRecorder Error",e)),function(e){if(!a.manuallyStopped&&u&&"inactive"===u.state)return delete t.timeslice,void u.start(6e5);setTimeout(void 0,1e3)}(),"inactive"!==u.state&&"stopped"!==u.state&&u.stop()},"number"==typeof t.timeSlice?(o(),u.start(t.timeSlice)):u.start(36e5),t.initCallback&&t.initCallback()},this.timestamps=[],this.stop=function(e){e=e||function(){},a.manuallyStopped=!0,u&&(this.recordingCallback=e,"recording"===u.state&&u.stop(),"number"==typeof t.timeSlice&&setTimeout(function(){a.blob=new Blob(c,{type:i(t)}),a.recordingCallback(a.blob)},100))},this.pause=function(){u&&"recording"===u.state&&u.pause()},this.resume=function(){u&&"paused"===u.state&&u.resume()},this.clearRecordedData=function(){u&&"recording"===u.state&&a.stop(r),r()};var u;this.getInternalRecorder=function(){return u},this.blob=null,this.getState=function(){return u?u.state||"inactive":"inactive"};var f=[];this.getAllStates=function(){return f},void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!1);var a=this;!function e(){if(u&&!1!==t.checkForInactiveTracks)return!1===n()?(t.disableLogs||console.log("MediaStream seems stopped."),void a.stop()):void setTimeout(e,1e3)}(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */
function g(e,t){function o(){if(!1===t.checkForInactiveTracks)return!0;if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}function i(e,t){function o(e,t){function o(e,t,o){var r=Math.round(e.length*(t/o)),n=[],a=Number((e.length-1)/(r-1));n[0]=e[0];for(var d=1;d<r-1;d++){var s=d*a,c=Number(Math.floor(s)).toFixed(),u=Number(Math.ceil(s)).toFixed(),f=s-c;n[d]=i(e[c],e[u],f)}return n[r-1]=e[e.length-1],n}function i(e,t,o){return e+(t-e)*o}function r(e,t){for(var o=new Float64Array(t),i=0,r=e.length,n=0;n<r;n++){var a=e[n];o.set(a,i),i+=a.length}return o}function n(e,t,o){for(var i=o.length,r=0;r<i;r++)e.setUint8(t+r,o.charCodeAt(r))}var a=e.numberOfAudioChannels,d=e.leftBuffers.slice(0),s=e.rightBuffers.slice(0),c=e.sampleRate,u=e.internalInterleavedLength,f=e.desiredSampRate;2===a&&(d=r(d,u),s=r(s,u),f&&(d=o(d,f,c),s=o(s,f,c))),1===a&&(d=r(d,u),f&&(d=o(d,f,c))),f&&(c=f);var l;2===a&&(l=function(e,t){for(var o=e.length+t.length,i=new Float64Array(o),r=0,n=0;n<o;)i[n++]=e[r],i[n++]=t[r],r++;return i}(d,s)),1===a&&(l=d);var h=l.length,g=44+2*h,m=new ArrayBuffer(g),p=new DataView(m);n(p,0,"RIFF"),p.setUint32(4,44+2*h,!0),n(p,8,"WAVE"),n(p,12,"fmt "),p.setUint32(16,16,!0),p.setUint16(20,1,!0),p.setUint16(22,a,!0),p.setUint32(24,c,!0),p.setUint32(28,2*c,!0),p.setUint16(32,2*a,!0),p.setUint16(34,16,!0),n(p,36,"data"),p.setUint32(40,2*h,!0);for(var v=h,b=44,w=0;w<v;w++)p.setInt16(b,32767*l[w],!0),b+=2;if(t)return t({buffer:m,view:p});postMessage({buffer:m,view:p})}if(M||x||U||e.noWorker)return void o(e,function(e){t(e.buffer,e.view)});var i=r(o);i.onmessage=function(e){t(e.data.buffer,e.data.view),A.revokeObjectURL(i.workerURL)},i.postMessage(e)}function r(e){var t=A.createObjectURL(new Blob([e.toString(),";this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),o=new Worker(t);return o.workerURL=t,o}function n(){f=[],l=[],g=0,S=!1,h=!1,T=!1,v=null,u.leftchannel=f,u.rightchannel=l,u.numberOfAudioChannels=m,u.desiredSampRate=p,u.sampleRate=R,u.recordingLength=g,k={left:[],right:[],recordingLength:0}}function a(){c&&(c.onaudioprocess=null,c.disconnect(),c=null),b&&(b.disconnect(),b=null),n()}function d(e){if(!T){if(!1===o()&&(t.disableLogs||console.log("MediaStream seems stopped."),c.disconnect(),h=!1),!h)return void(b&&(b.disconnect(),b=null));S||(S=!0,t.onAudioProcessStarted&&t.onAudioProcessStarted(),t.initCallback&&t.initCallback());var i=e.inputBuffer.getChannelData(0),r=new Float32Array(i);if(f.push(r),2===m){var n=e.inputBuffer.getChannelData(1),a=new Float32Array(n);l.push(a)}g+=y,u.recordingLength=g,void 0!==t.timeSlice&&(k.recordingLength+=y,k.left.push(r),2===m&&k.right.push(a))}}function s(){h&&"function"==typeof t.ondataavailable&&void 0!==t.timeSlice&&(k.left.length?(i({desiredSampRate:p,sampleRate:R,numberOfAudioChannels:m,internalInterleavedLength:k.recordingLength,leftBuffers:k.left,rightBuffers:1===m?[]:k.right},function(e,o){var i=new Blob([o],{type:"audio/wav"});t.ondataavailable(i),setTimeout(s,t.timeSlice)}),k={left:[],right:[],recordingLength:0}):setTimeout(s,t.timeSlice))}if(!e.getAudioTracks().length)throw"Your stream has no audio tracks.";t=t||{};var c,u=this,f=[],l=[],h=!1,g=0,m=2,p=t.desiredSampRate;!0===t.leftChannel&&(m=1),1===t.numberOfAudioChannels&&(m=1),(!m||m<1)&&(m=2),t.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: ",m),void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!0),this.record=function(){if(!1===o())throw"Please make sure MediaStream is active.";n(),S=T=!1,h=!0,void 0!==t.timeSlice&&s()},this.stop=function(e){e=e||function(){},h=!1,i({desiredSampRate:p,sampleRate:R,numberOfAudioChannels:m,internalInterleavedLength:g,leftBuffers:f,rightBuffers:1===m?[]:l},function(t,o){u.blob=new Blob([o],{type:"audio/wav"}),u.buffer=new ArrayBuffer(o.buffer.byteLength),u.view=o,u.sampleRate=p||R,u.bufferSize=y,u.length=g,S=!1,e&&e(u.blob)})},O.AudioContextConstructor||(O.AudioContextConstructor=new O.AudioContext);var v=O.AudioContextConstructor,b=v.createMediaStreamSource(e),w=[0,256,512,1024,2048,4096,8192,16384],y=void 0===t.bufferSize?4096:t.bufferSize;if(-1===w.indexOf(y)&&(t.disableLogs||console.warn("Legal values for buffer-size are "+JSON.stringify(w,null,"\t"))),v.createJavaScriptNode)c=v.createJavaScriptNode(y,m,m);else{if(!v.createScriptProcessor)throw"WebAudio API has no support on this browser.";c=v.createScriptProcessor(y,m,m)}b.connect(c),t.bufferSize||(y=c.bufferSize);var R=void 0!==t.sampleRate?t.sampleRate:v.sampleRate||44100;(R<22050||R>96e3)&&(t.disableLogs||console.warn("sample-rate must be under range 22050 and 96000.")),t.disableLogs||(console.log("sample-rate",R),console.log("buffer-size",y),t.desiredSampRate&&console.log("Desired sample-rate",t.desiredSampRate));var T=!1;this.pause=function(){T=!0},this.resume=function(){if(!1===o())throw"Please make sure MediaStream is active.";if(!h)return t.disableLogs||console.log("Seems recording has been restarted."),void this.record();T=!1},this.clearRecordedData=function(){t.checkForInactiveTracks=!1,h&&this.stop(a),a()},this.name="StereoAudioRecorder",this.toString=function(){return this.name};var S=!1;c.onaudioprocess=d,c.connect(v.destination),this.leftchannel=f,this.rightchannel=l,this.numberOfAudioChannels=m,this.desiredSampRate=p,this.sampleRate=R,u.recordingLength=g;var k={left:[],right:[],recordingLength:0}}/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */
function m(e,t){function o(){m.frames=[],f=!1,l=!1}function i(){var t=document.createElement("canvas"),o=t.getContext("2d");return t.width=e.width,t.height=e.height,o.drawImage(e,0,0),t}function r(){if(l)return g=(new Date).getTime(),setTimeout(r,500);if("canvas"===e.nodeName.toLowerCase()){var o=(new Date).getTime()-g;return g=(new Date).getTime(),m.frames.push({image:i(),duration:o}),void(f&&setTimeout(r,t.frameInterval))}html2canvas(e,{grabMouse:void 0===t.showMousePointer||t.showMousePointer,onrendered:function(e){var o=(new Date).getTime()-g;if(!o)return setTimeout(r,t.frameInterval);g=(new Date).getTime(),m.frames.push({image:e.toDataURL("image/webp",1),duration:o}),f&&setTimeout(r,t.frameInterval)}})}if("undefined"==typeof html2canvas)throw"Please link: https://cdn.webrtc-experiment.com/screenshot.js";t=t||{},t.frameInterval||(t.frameInterval=10);var n=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(e){e in document.createElement("canvas")&&(n=!0)});var a=!(!window.webkitRTCPeerConnection&&!window.webkitGetUserMedia||!window.chrome),d=50,s=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);a&&s&&s[2]&&(d=parseInt(s[2],10)),a&&d<52&&(n=!1);var c,u;if(n)if(t.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),e instanceof HTMLCanvasElement)c=e;else{if(!(e instanceof CanvasRenderingContext2D))throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";c=e.canvas}else navigator.mozGetUserMedia&&(t.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));var f;this.record=function(){if(f=!0,n&&!t.useWhammyRecorder){var e;"captureStream"in c?e=c.captureStream(25):"mozCaptureStream"in c?e=c.mozCaptureStream(25):"webkitCaptureStream"in c&&(e=c.webkitCaptureStream(25));try{var o=new B;o.addTrack(e.getVideoTracks()[0]),e=o}catch(e){}if(!e)throw"captureStream API are NOT available.";u=new h(e,{mimeType:"video/webm"}),u.record()}else m.frames=[],g=(new Date).getTime(),r();t.initCallback&&t.initCallback()},this.getWebPImages=function(o){if("canvas"!==e.nodeName.toLowerCase())return void o();var i=m.frames.length;m.frames.forEach(function(e,o){var r=i-o;t.disableLogs||console.log(r+"/"+i+" frames remaining"),t.onEncodingCallback&&t.onEncodingCallback(r,i);var n=e.image.toDataURL("image/webp",1);m.frames[o].image=n}),t.disableLogs||console.log("Generating WebM"),o()},this.stop=function(e){f=!1;var o=this;if(n&&u)return void u.stop(e);this.getWebPImages(function(){m.compile(function(i){t.disableLogs||console.log("Recording finished!"),o.blob=i,o.blob.forEach&&(o.blob=new Blob([],{type:"video/webm"})),e&&e(o.blob),m.frames=[]})})};var l=!1;this.pause=function(){if(l=!0,u instanceof h)return void u.pause()},this.resume=function(){if(l=!1,u instanceof h)return void u.resume();f||this.record()},this.clearRecordedData=function(){f&&this.stop(o),o()},this.name="CanvasRecorder",this.toString=function(){return this.name};var g=(new Date).getTime(),m=new E.Video(100)}/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */
function p(e,t){function o(e){e=void 0!==e?e:10;var t=(new Date).getTime()-c;return t?d?(c=(new Date).getTime(),setTimeout(o,100)):(c=(new Date).getTime(),s.paused&&s.play(),h.drawImage(s,0,0,l.width,l.height),u.frames.push({duration:t,image:l.toDataURL("image/webp")}),void(a||setTimeout(o,e,e))):setTimeout(o,e,e)}function i(e){var t=-1,o=e.length;!function i(){if(++t===o)return void e.callback();setTimeout(function(){e.functionToLoop(i,t)},1)}()}function r(e,t,o,r,n){var a=document.createElement("canvas");a.width=l.width,a.height=l.height;var d=a.getContext("2d"),s=[],c=-1===t,u=t&&t>0&&t<=e.length?t:e.length,f={r:0,g:0,b:0},h=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),g=o&&o>=0&&o<=1?o:0,m=r&&r>=0&&r<=1?r:0,p=!1;i({length:u,functionToLoop:function(t,o){var i,r,n,a=function(){!p&&n-i<=n*m||(c&&(p=!0),s.push(e[o])),t()};if(p)a();else{var u=new Image;u.onload=function(){d.drawImage(u,0,0,l.width,l.height);var e=d.getImageData(0,0,l.width,l.height);i=0,r=e.data.length,n=e.data.length/4;for(var t=0;t<r;t+=4){var o={r:e.data[t],g:e.data[t+1],b:e.data[t+2]};Math.sqrt(Math.pow(o.r-f.r,2)+Math.pow(o.g-f.g,2)+Math.pow(o.b-f.b,2))<=h*g&&i++}a()},u.src=e[o].image}},callback:function(){s=s.concat(e.slice(u)),s.length<=0&&s.push(e[e.length-1]),n(s)}})}function n(){u.frames=[],a=!0,d=!1}t=t||{},t.frameInterval||(t.frameInterval=10),t.disableLogs||console.log("Using frames-interval:",t.frameInterval),this.record=function(){t.width||(t.width=320),t.height||(t.height=240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),l.width=t.canvas.width||320,l.height=t.canvas.height||240,h=l.getContext("2d"),t.video&&t.video instanceof HTMLVideoElement?(s=t.video.cloneNode(),t.initCallback&&t.initCallback()):(s=document.createElement("video"),f(e,s),s.onloadedmetadata=function(){t.initCallback&&t.initCallback()},s.width=t.video.width,s.height=t.video.height),s.muted=!0,s.play(),c=(new Date).getTime(),u=new E.Video,t.disableLogs||(console.log("canvas resolutions",l.width,"*",l.height),console.log("video width/height",s.width||l.width,"*",s.height||l.height)),o(t.frameInterval)};var a=!1;this.stop=function(e){e=e||function(){},a=!0;var o=this;setTimeout(function(){r(u.frames,-1,null,null,function(i){u.frames=i,t.advertisement&&t.advertisement.length&&(u.frames=t.advertisement.concat(u.frames)),u.compile(function(t){o.blob=t,o.blob.forEach&&(o.blob=new Blob([],{type:"video/webm"})),e&&e(o.blob)})})},10)};var d=!1;this.pause=function(){d=!0},this.resume=function(){d=!1,a&&this.record()},this.clearRecordedData=function(){a||this.stop(n),n()},this.name="WhammyRecorder",this.toString=function(){return this.name};var s,c,u,l=document.createElement("canvas"),h=l.getContext("2d")}/**
 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef GifRecorder
 * @class
 * @example
 * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     img.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
 */
function v(e,t){function o(){g&&(g.stream().bin=[])}if("undefined"==typeof GIFEncoder){var i=document.createElement("script");i.src="https://cdn.webrtc-experiment.com/gif-recorder.js",(document.body||document.documentElement).appendChild(i)}t=t||{};var r=e instanceof CanvasRenderingContext2D||e instanceof HTMLCanvasElement;this.record=function(){function e(o){if(!0!==p.clearedRecordedData){if(n)return setTimeout(function(){e(o)},100);m=S(e),void 0===typeof h&&(h=o),o-h<90||(!r&&c.paused&&c.play(),r||d.drawImage(c,0,0,a.width,a.height),t.onGifPreview&&t.onGifPreview(a.toDataURL("image/png")),g.addFrame(d),h=o)}}return"undefined"==typeof GIFEncoder?void setTimeout(p.record,1e3):s?(r||(t.width||(t.width=c.offsetWidth||320),t.height||(t.height=c.offsetHeight||240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),a.width=t.canvas.width||320,a.height=t.canvas.height||240,c.width=t.video.width||320,c.height=t.video.height||240),g=new GIFEncoder,g.setRepeat(0),g.setDelay(t.frameRate||200),g.setQuality(t.quality||10),g.start(),"function"==typeof t.onGifRecordingStarted&&t.onGifRecordingStarted(),u=Date.now(),m=S(e),void(t.initCallback&&t.initCallback())):void setTimeout(p.record,1e3)},this.stop=function(e){e=e||function(){},m&&C(m),l=Date.now(),this.blob=new Blob([new Uint8Array(g.stream().bin)],{type:"image/gif"}),e(this.blob),g.stream().bin=[]};var n=!1;this.pause=function(){n=!0},this.resume=function(){n=!1},this.clearRecordedData=function(){p.clearedRecordedData=!0,o()},this.name="GifRecorder",this.toString=function(){return this.name};var a=document.createElement("canvas"),d=a.getContext("2d");r&&(e instanceof CanvasRenderingContext2D?(d=e,a=d.canvas):e instanceof HTMLCanvasElement&&(d=e.getContext("2d"),a=e));var s=!0;if(!r){var c=document.createElement("video");c.muted=!0,c.autoplay=!0,s=!1,c.onloadedmetadata=function(){s=!0},f(e,c),c.play()}var u,l,h,g,m=null,p=this}function b(e){function t(e,o,i){if("createObjectURL"in m&&!i)try{o.src=m.createObjectURL(e)}catch(i){return void t(e,o,!0)}else"srcObject"in o?o.srcObject=e:"mozSrcObject"in o?o.mozSrcObject=e:alert("createObjectURL/srcObject both are not supported.")}function o(){if(!u){var e=c.length,t=!1,r=[];if(c.forEach(function(e){e.stream||(e.stream={}),e.stream.fullcanvas?t=e:r.push(e)}),t)f.width=t.stream.width,f.height=t.stream.height;else if(r.length){f.width=e>1?2*r[0].width:r[0].width;var n=1;3!==e&&4!==e||(n=2),5!==e&&6!==e||(n=3),7!==e&&8!==e||(n=4),9!==e&&10!==e||(n=5),f.height=r[0].height*n}else f.width=h.width||360,f.height=h.height||240;t&&t instanceof HTMLVideoElement&&i(t),r.forEach(function(e,t){i(e,t)}),setTimeout(o,h.frameInterval)}}function i(e,t){if(!u){var o=0,i=0,r=e.width,n=e.height;1===t&&(o=e.width),2===t&&(i=e.height),3===t&&(o=e.width,i=e.height),4===t&&(i=2*e.height),5===t&&(o=e.width,i=2*e.height),6===t&&(i=3*e.height),7===t&&(o=e.width,i=3*e.height),void 0!==e.stream.left&&(o=e.stream.left),void 0!==e.stream.top&&(i=e.stream.top),void 0!==e.stream.width&&(r=e.stream.width),void 0!==e.stream.height&&(n=e.stream.height),l.drawImage(e,o,i,r,n),"function"==typeof e.stream.onRender&&e.stream.onRender(l,o,i,r,n,t)}}function r(){u=!1;var t=n(),o=a();o&&o.getAudioTracks().forEach(function(e){t.addTrack(e)});var i;return e.forEach(function(e){e.fullcanvas&&(i=!0)}),t}function n(){s();var e;"captureStream"in f?e=f.captureStream():"mozCaptureStream"in f?e=f.mozCaptureStream():h.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var t=new p;return e.getVideoTracks().forEach(function(e){t.addTrack(e)}),f.stream=t,t}function a(){v.AudioContextConstructor||(v.AudioContextConstructor=new v.AudioContext),h.audioContext=v.AudioContextConstructor,h.audioSources=[],!0===h.useGainNode&&(h.gainNode=h.audioContext.createGain(),h.gainNode.connect(h.audioContext.destination),h.gainNode.gain.value=0);var t=0;if(e.forEach(function(e){if(e.getAudioTracks().length){t++;var o=h.audioContext.createMediaStreamSource(e);!0===h.useGainNode&&o.connect(h.gainNode),h.audioSources.push(o)}}),t)return h.audioDestination=h.audioContext.createMediaStreamDestination(),h.audioSources.forEach(function(e){e.connect(h.audioDestination)}),h.audioDestination.stream}function d(e){var o=document.createElement("video");return t(e,o),o.muted=!0,o.volume=0,o.width=e.width||h.width||360,o.height=e.height||h.height||240,o.play(),o}function s(t){c=[],t=t||e,t.forEach(function(e){if(e.getVideoTracks().length){var t=d(e);t.stream=e,c.push(t)}})}var c=[],u=!1,f=document.createElement("canvas"),l=f.getContext("2d");f.style="opacity:0;position:absolute;z-index:-1;top: -100000000;left:-1000000000; margin-top:-1000000000;margin-left:-1000000000;",(document.body||document.documentElement).appendChild(f),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var h=this,g=window.AudioContext;void 0===g&&("undefined"!=typeof webkitAudioContext&&(g=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(g=mozAudioContext));var m=window.URL;void 0===m&&"undefined"!=typeof webkitURL&&(m=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var p=window.MediaStream;void 0===p&&"undefined"!=typeof webkitMediaStream&&(p=webkitMediaStream),void 0!==p&&("getVideoTracks"in p.prototype||(p.prototype.getVideoTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks.forEach(function(t){-1!==t.kind.toString().indexOf("video")&&e.push(t)}),e},p.prototype.getAudioTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks.forEach(function(t){-1!==t.kind.toString().indexOf("audio")&&e.push(t)}),e}),void 0===p.prototype.stop&&(p.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})}));var v={};void 0!==g?v.AudioContext=g:"undefined"!=typeof webkitAudioContext&&(v.AudioContext=webkitAudioContext),this.startDrawingFrames=function(){o()},this.appendStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),e.concat(t),t.forEach(function(e){if(e.getVideoTracks().length){var t=d(e);t.stream=e,c.push(t)}if(e.getAudioTracks().length&&h.audioContext){var o=h.audioContext.createMediaStreamSource(e);o.connect(h.audioDestination),h.audioSources.push(o)}})},this.releaseStreams=function(){c=[],u=!0,h.gainNode&&(h.gainNode.disconnect(),h.gainNode=null),h.audioSources.length&&(h.audioSources.forEach(function(e){e.disconnect()}),h.audioSources=[]),h.audioDestination&&(h.audioDestination.disconnect(),h.audioDestination=null),h.audioContext=null,l.clearRect(0,0,f.width,f.height),f.stream&&(f.stream.stop(),f.stream=null)},this.resetVideoStreams=function(e){!e||e instanceof Array||(e=[e]),s(e)},this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=r}/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */
function w(e,t){function o(){var t=[];return e.forEach(function(e){e.getVideoTracks().forEach(function(e){t.push(e)})}),t}e=e||[];var i,r,n=this;t=t||{mimeType:"video/webm",video:{width:360,height:240}},t.frameInterval||(t.frameInterval=10),t.video||(t.video={}),t.video.width||(t.video.width=360),t.video.height||(t.video.height=240),this.record=function(){i=new b(e),o().length&&(i.frameInterval=t.frameInterval||10,i.width=t.video.width||360,i.height=t.video.height||240,i.startDrawingFrames()),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(i.getMixedStream()),r=new h(i.getMixedStream(),t),r.record()},this.stop=function(e){r&&r.stop(function(t){n.blob=t,e(t),n.clearRecordedData()})},this.pause=function(){r&&r.pause()},this.resume=function(){r&&r.resume()},this.clearRecordedData=function(){r&&(r.clearRecordedData(),r=null),i&&(i.releaseStreams(),i=null)},this.addStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),e.concat(t),r&&i&&i.appendStreams(t)},this.resetVideoStreams=function(e){i&&(!e||e instanceof Array||(e=[e]),i.resetVideoStreams(e))},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */
function y(e,t){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(void 0===e)throw'First argument "MediaStream" is required.';var o=this;o.recordRTC=new r(e,t),this.startRecording=function(){return new Promise(function(e,t){try{o.recordRTC.startRecording(),e()}catch(e){t(e)}})},this.stopRecording=function(){return new Promise(function(e,t){try{o.recordRTC.stopRecording(function(t){o.blob=o.recordRTC.getBlob(),e(t)})}catch(e){t(e)}})},this.getDataURL=function(e){return new Promise(function(e,t){try{o.recordRTC.getDataURL(function(t){e(t)})}catch(e){t(e)}})},this.getBlob=function(){return o.recordRTC.getBlob()},this.blob=null}var R,T;r.version="5.4.6",e.exports=r,R=[],void 0!==(T=function(){return r}.apply(t,R))&&(e.exports=T),r.getFromDisk=function(e,t){if(!t)throw"callback is mandatory.";console.log("Getting recorded "+("all"===e?"blobs":e+" blob ")+" from disk!"),I.Fetch(function(o,i){"all"!==e&&i===e+"Blob"&&t&&t(o),"all"===e&&t&&t(o,i.replace("Blob",""))})},r.writeToDisk=function(e){console.log("Writing recorded blob(s) to disk!"),e=e||{},e.audio&&e.video&&e.gif?e.audio.getDataURL(function(t){e.video.getDataURL(function(o){e.gif.getDataURL(function(e){I.Store({audioBlob:t,videoBlob:o,gifBlob:e})})})}):e.audio&&e.video?e.audio.getDataURL(function(t){e.video.getDataURL(function(e){I.Store({audioBlob:t,videoBlob:e})})}):e.audio&&e.gif?e.audio.getDataURL(function(t){e.gif.getDataURL(function(e){I.Store({audioBlob:t,gifBlob:e})})}):e.video&&e.gif?e.video.getDataURL(function(t){e.gif.getDataURL(function(e){I.Store({videoBlob:t,gifBlob:e})})}):e.audio?e.audio.getDataURL(function(e){I.Store({audioBlob:e})}):e.video?e.video.getDataURL(function(e){I.Store({videoBlob:e})}):e.gif&&e.gif.getDataURL(function(e){I.Store({gifBlob:e})})},d.getFromDisk=r.getFromDisk,d.writeToDisk=r.writeToDisk,void 0!==r&&(r.MRecordRTC=d);!function(e){e&&"undefined"==typeof window&&void 0!==o&&(o.navigator={userAgent:"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",getUserMedia:function(){}},o.console||(o.console={}),void 0!==o.console.log&&void 0!==o.console.error||(o.console.error=o.console.log=o.console.log||function(){console.log(arguments)}),"undefined"==typeof document&&(e.document={},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""}};return e},e.HTMLVideoElement=function(){}),"undefined"==typeof location&&(e.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(e.screen={width:0,height:0}),void 0===A&&(e.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),e.window=o)}(void 0!==o?o:null);var S=window.requestAnimationFrame;if(void 0===S)if("undefined"!=typeof webkitRequestAnimationFrame)S=webkitRequestAnimationFrame;else if("undefined"!=typeof mozRequestAnimationFrame)S=mozRequestAnimationFrame;else if("undefined"!=typeof msRequestAnimationFrame)S=msRequestAnimationFrame;else if(void 0===S){var k=0;S=function(e,t){var o=(new Date).getTime(),i=Math.max(0,16-(o-k)),r=setTimeout(function(){e(o+i)},i);return k=o+i,r}}var C=window.cancelAnimationFrame;void 0===C&&("undefined"!=typeof webkitCancelAnimationFrame?C=webkitCancelAnimationFrame:"undefined"!=typeof mozCancelAnimationFrame?C=mozCancelAnimationFrame:"undefined"!=typeof msCancelAnimationFrame?C=msCancelAnimationFrame:void 0===C&&(C=function(e){clearTimeout(e)}));var L=window.AudioContext;void 0===L&&("undefined"!=typeof webkitAudioContext&&(L=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(L=mozAudioContext));var A=window.URL;void 0===A&&"undefined"!=typeof webkitURL&&(A=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var M=!(-1===navigator.userAgent.indexOf("Edge")||!navigator.msSaveBlob&&!navigator.msSaveOrOpenBlob),x=!!window.opera||-1!==navigator.userAgent.indexOf("OPR/"),U=navigator.userAgent.toLowerCase().indexOf("safari/")>-1,D=!x&&!M&&!!navigator.webkitGetUserMedia||u()||U,B=window.MediaStream;void 0===B&&"undefined"!=typeof webkitMediaStream&&(B=webkitMediaStream),void 0!==B&&("getVideoTracks"in B.prototype||(B.prototype.getVideoTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks().forEach(function(t){-1!==t.kind.toString().indexOf("video")&&e.push(t)}),e},B.prototype.getAudioTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks().forEach(function(t){-1!==t.kind.toString().indexOf("audio")&&e.push(t)}),e}),void 0===B.prototype.stop&&(B.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})}));/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */
var O={};void 0!==L?O.AudioContext=L:"undefined"!=typeof webkitAudioContext&&(O.AudioContext=webkitAudioContext),void 0!==r&&(r.Storage=O),void 0!==r&&(r.MediaStreamRecorder=h),void 0!==r&&(r.StereoAudioRecorder=g),void 0!==r&&(r.CanvasRecorder=m),void 0!==r&&(r.WhammyRecorder=p);/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */
var E=function(){function e(e){this.frames=[],this.duration=e||1,this.quality=.8}function t(e){var t=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),o=new Worker(t);return A.revokeObjectURL(t),o}function o(e){function t(e){var t=i(e);if(!t)return[];for(var r=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:l(t.duration),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:t.width,id:176},{data:t.height,id:186}]}]}]}]}],n=0,a=0;n<e.length;){var s=[],c=0;do{s.push(e[n]),c+=e[n].duration,n++}while(n<e.length&&c<3e4);var u={id:524531317,data:o(a,0,s)};r[1].data.push(u),a+=c}return d(r)}function o(e,t,o){return[{data:e,id:231}].concat(o.map(function(e){var o=s({discardable:0,frame:e.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(t)});return t+=e.duration,{data:o,id:163}}))}function i(e){if(!e[0])return void postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});for(var t=e[0].width,o=e[0].height,i=e[0].duration,r=1;r<e.length;r++)i+=e[r].duration;return{duration:i,width:t,height:o}}function r(e){for(var t=[];e>0;)t.push(255&e),e>>=8;return new Uint8Array(t.reverse())}function n(e){return new Uint8Array(e.split("").map(function(e){return e.charCodeAt(0)}))}function a(e){var t=[];e=(e.length%8?new Array(9-e.length%8).join("0"):"")+e;for(var o=0;o<e.length;o+=8)t.push(parseInt(e.substr(o,8),2));return new Uint8Array(t)}function d(e){for(var t=[],o=0;o<e.length;o++){var i=e[o].data;"object"==typeof i&&(i=d(i)),"number"==typeof i&&(i=a(i.toString(2))),"string"==typeof i&&(i=n(i));var s=i.size||i.byteLength||i.length,c=Math.ceil(Math.ceil(Math.log(s)/Math.log(2))/8),u=s.toString(2),f=new Array(7*c+7+1-u.length).join("0")+u,l=new Array(c).join("0")+"1"+f;t.push(r(e[o].id)),t.push(a(l)),t.push(i)}return new Blob(t,{type:"video/webm"})}function s(e){var t=0;if(e.keyframe&&(t|=128),e.invisible&&(t|=8),e.lacing&&(t|=e.lacing<<1),e.discardable&&(t|=1),e.trackNum>127)throw"TrackNumber > 127 not supported";return[128|e.trackNum,e.timecode>>8,255&e.timecode,t].map(function(e){return String.fromCharCode(e)}).join("")+e.frame}function c(e){for(var t=e.RIFF[0].WEBP[0],o=t.indexOf("*"),i=0,r=[];i<4;i++)r[i]=t.charCodeAt(o+3+i);var n,a,d;return d=r[1]<<8|r[0],n=16383&d,d=r[3]<<8|r[2],a=16383&d,{width:n,height:a,data:t,riff:e}}function u(e,t){return parseInt(e.substr(t+4,4).split("").map(function(e){var t=e.charCodeAt(0).toString(2);return new Array(8-t.length+1).join("0")+t}).join(""),2)}function f(e){for(var t=0,o={};t<e.length;){var i=e.substr(t,4),r=u(e,t),n=e.substr(t+4+4,r);t+=8+r,o[i]=o[i]||[],"RIFF"===i||"LIST"===i?o[i].push(f(n)):o[i].push(n)}return o}function l(e){return[].slice.call(new Uint8Array(new Float64Array([e]).buffer),0).map(function(e){return String.fromCharCode(e)}).reverse().join("")}var h=new t(e.map(function(e){var t=c(f(atob(e.image.slice(23))));return t.duration=e.duration,t}));postMessage(h)}return e.prototype.add=function(e,t){if("canvas"in e&&(e=e.canvas),"toDataURL"in e&&(e=e.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/gi.test(e))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:e,duration:t||this.duration})},e.prototype.compile=function(e){var i=t(o);i.onmessage=function(t){if(t.data.error)return void console.error(t.data.error);e(t.data)},i.postMessage(this.frames)},{Video:e}}();void 0!==r&&(r.Whammy=E);/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
 * @author {@link http://www.MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 *     gifBlob  : yourGifBlob
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 *     if(type === 'gifBlob')   { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */
var I={init:function(){function e(e){e.createObjectStore(o.dataStoreName)}function t(){function e(e){t.objectStore(o.dataStoreName).get(e).onsuccess=function(t){o.callback&&o.callback(t.target.result,e)}}var t=i.transaction([o.dataStoreName],"readwrite");o.videoBlob&&t.objectStore(o.dataStoreName).put(o.videoBlob,"videoBlob"),o.gifBlob&&t.objectStore(o.dataStoreName).put(o.gifBlob,"gifBlob"),o.audioBlob&&t.objectStore(o.dataStoreName).put(o.audioBlob,"audioBlob"),e("audioBlob"),e("videoBlob"),e("gifBlob")}var o=this;if("undefined"==typeof indexedDB||void 0===indexedDB.open)return void console.error("IndexedDB API are not available in this browser.");var i,r=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),n=indexedDB.open(r,1);n.onerror=o.onError,n.onsuccess=function(){if(i=n.result,i.onerror=o.onError,i.setVersion)if(1!==i.version){var r=i.setVersion(1);r.onsuccess=function(){e(i),t()}}else t();else t()},n.onupgradeneeded=function(t){e(t.target.result)}},Fetch:function(e){return this.callback=e,this.init(),this},Store:function(e){return this.audioBlob=e.audioBlob,this.videoBlob=e.videoBlob,this.gifBlob=e.gifBlob,this.init(),this},onError:function(e){console.error(JSON.stringify(e,null,"\t"))},dataStoreName:"recordRTC",dbName:null};void 0!==r&&(r.DiskStorage=I),void 0!==r&&(r.GifRecorder=v),void 0!==r&&(r.MultiStreamRecorder=w),void 0!==r&&(r.RecordRTCPromisesHandler=y)}).call(t,o(20),o(21))},20:function(e,t){var o;o=function(){return this}();try{o=o||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(o=window)}e.exports=o},21:function(e,t){function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function r(e){if(u===setTimeout)return setTimeout(e,0);if((u===o||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function n(e){if(f===clearTimeout)return clearTimeout(e);if((f===i||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{return f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}function a(){m&&h&&(m=!1,h.length?g=h.concat(g):p=-1,g.length&&d())}function d(){if(!m){var e=r(a);m=!0;for(var t=g.length;t;){for(h=g,g=[];++p<t;)h&&h[p].run();p=-1,t=g.length}h=null,m=!1,n(e)}}function s(e,t){this.fun=e,this.array=t}function c(){}var u,f,l=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:o}catch(e){u=o}try{f="function"==typeof clearTimeout?clearTimeout:i}catch(e){f=i}}();var h,g=[],m=!1,p=-1;l.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var o=1;o<arguments.length;o++)t[o-1]=arguments[o];g.push(new s(e,t)),1!==g.length||m||r(d)},s.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=c,l.addListener=c,l.once=c,l.off=c,l.removeListener=c,l.removeAllListeners=c,l.emit=c,l.prependListener=c,l.prependOnceListener=c,l.listeners=function(e){return[]},l.binding=function(e){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(e){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}}})});
//# sourceMappingURL=microphone.min.js.map